job('build') {
    scm {
        git('git://github.com/Beletskyy/HadoopTestFacilityAvro')
    }
    triggers {
        scm('* * * * *')
    }
    tasks.withType(Checkstyle) {
        reports {
            source 'src'
            xml.enabled true
            xml.destination rootProject.file("build/reports/checkstyle/checkstyle-result.xml")
            html.enabled false
            html.destination rootProject.file("build/reports/checkstyle/checkstyle-result.html")
            ignoreFailures = true
        }
    }

    tasks.withType(FindBugs) {
        reports {
            xml.enabled true
            xml.destination rootProject.file("build/reports/findbugs/findbugs.xml")
            html.enabled false
            html.destination rootProject.file("build/reports/findbugs/findbugs.html")
            effort = "max"
            reportLevel = "high"
            ignoreFailures = true
        }
    }


    tasks.withType(Pmd) {
        reports {
            ignoreFailures = true
            xml.enabled true
            xml.destination rootProject.file("build/reports/pmd/pmd.xml")
            html.enabled false
            html.destination rootProject.file("build/reports/pmd/pmd.html")
            ruleSets = [
                    'java-basic',
                    'java-braces',
                    'java-clone',
                    'java-codesize',
                    'java-comments',
                    'java-controversial',
                    'java-coupling',
                    'java-design',
                    'java-empty',
                    'java-finalizers',
                    'java-imports',
                    'java-j2ee',
                    'java-javabeans',
                    'java-junit',
                    'java-logging-jakarta-commons',
                    'java-logging-java',
                    'java-migrating',
                    'java-naming',
                    'java-optimizations',
                    'java-strictexception',
                    'java-strings',
                    'java-sunsecure',
                    'java-typeresolution',
                    'java-unnecessary',
                    'java-unusedcode'
            ]
        }
    }
    steps {
        gradle('clean build')
    }
}
