job('MyBuild') {
    //section to pass parameters to job
    parameters {
        globalVariableParam('host_properties', 'sandbox', 'name of file for host properties')
        globalVariableParam('customerID', '1000', 'customerID')
        globalVariableParam('ce_supplierId', '1001', 'ce_supplierId')
    }
    //Section for establishing connection to git repo with ssh, using
    scm {
        git {
            remote {
                url('ssh://root@10.10.21.183:22/root/sandbox/HadoopTestFacilityAvro')
                credentials('''5bddc1dc-e121-4cb1-aef4-37a5c8ebfc7a''')
            }
        }
    }
    triggers {
        scm('* * * * *')
    }
    steps {
        gradle('deploymenttohost')
    }

    publishers {
        checkstyle('build/reports/checkstyle/checkstyle-result.xml') {
            healthLimits(3, 25)
            thresholdLimit('high')
            defaultEncoding('UTF-8')
            canRunOnFailed(true)
            useStableBuildAsReference(true)
            useDeltaValues(true)
            computeNew(true)
        }
        findbugs('build/reports/findbugs/findbugs.xml', false) {
            healthLimits(3, 25)
            thresholdLimit('high')
            defaultEncoding('UTF-8')
            canRunOnFailed(true)
            useStableBuildAsReference(true)
            useDeltaValues(true)
            computeNew(true)
        }
        pmd('build/reports/pmd/pmd.xml') {
            healthLimits(3, 25)
            thresholdLimit('high')
            defaultEncoding('UTF-8')
            canRunOnFailed(true)
            useStableBuildAsReference(true)
            useDeltaValues(true)
            computeNew(true)
        }
    }
}